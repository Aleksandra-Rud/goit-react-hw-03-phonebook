{"version":3,"sources":["Components/ContactForm/Form.module.css","Components/ContactForm/Form.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","addNewContact","reset","id","nameId","uuidv4","numberId","onSubmit","this","htmlFor","className","s","formLbl","type","onChange","pattern","title","required","inputLbl","btnInput","Component","ContactList","contacts","deleteContact","contactLists","map","contactItem","contactName","contactNumber","onClick","btnDelete","Filter","filteredValue","filterInputLabel","filteredInput","placeholder","initialState","App","filter","handleSubmitForm","find","contact","toLowerCase","alert","prevState","componentDidUpdate","prevProps","localStorage","setItem","JSON","stringify","componentDidMount","newContacts","parse","getItem","onDeleteContact","handleFilteredInput","event","target","onFilteredContacts","normalizedFilter","trim","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb32df33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLbl\":\"Form_formLbl__1MxR-\",\"inputLbl\":\"Form_inputLbl__2PxdO\",\"btnInput\":\"Form_btnInput__1YSxf\"};","import React, { Component } from \"react\";\r\nimport s from \"./Form.module.css\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    // console.log(e.currentTarget.value);\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addNewContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ id: \"\", name: \"\", number: \"\" });\r\n  };\r\n  \r\n  render() {\r\n    const nameId = uuidv4();\r\n    const numberId = uuidv4();\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={nameId} className={s.formLbl}>\r\n          {\" \"}\r\n          Name\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                className={s.inputLbl}\r\n            />\r\n        </label>\r\n        <br />    \r\n        <label htmlFor={numberId} className={s.formLbl}>\r\n          Number\r\n            <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                className={s.inputLbl}\r\n            />\r\n        </label>\r\n        <br />    \r\n        <button type=\"submit\" value=\"Отправить\" className={s.btnInput}>Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// console.log(s.input);\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactList({ contacts, deleteContact}) {\r\n    return (\r\n        <ul className={s.contactLists}>\r\n        {contacts.map(({ name, number, id }) => (\r\n            <li key={id} className={s.contactItem}>\r\n                <p className={s.contactName}>\r\n                    {name}: <span className={s.contactNumber}>{number}</span>\r\n                </p>\r\n                <button type=\"button\" onClick={() => deleteContact(id)} className={s.btnDelete}>\r\n                    Delete\r\n                </button>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ value, filteredValue }) => {\r\n    return (\r\n        <>\r\n            <label className={s.filterInputLabel}>Find contacts by name</label>\r\n            <br />\r\n            <input\r\n                className={s.filteredInput}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={filteredValue}\r\n                placeholder=\"Contact\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filteredValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./Components/ContactForm/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport \"./App.css\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  handleSubmitForm = ({ name, number }) => {\n    const addNewContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.state.contacts.find(\n      (contact) =>\n        contact.name.toLowerCase() === addNewContact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [addNewContact, ...prevState.contacts],\n        }));\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  };\n\n  componentDidMount = () => {\n    const newContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    this.setState({\n      contacts: newContacts ?? initialState,\n    });\n  };\n\n  onDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  handleFilteredInput = (event) => {\n    this.setState({\n      filter: event.target.value,\n    });\n  };\n\n  onFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().trim().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <ContactForm addNewContact={this.handleSubmitForm} />\n        <h2>Contacts</h2>\n        <Filter value={filter} filteredValue={this.handleFilteredInput} />\n        <ContactList\n          title=\"Contacts\"\n          deleteContact={this.onDeleteContact}\n          contacts={this.onFilteredContacts()}\n        ></ContactList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLists\":\"ContactList_contactLists__3vIjM\",\"contactItem\":\"ContactList_contactItem__558Kl\",\"contactName\":\"ContactList_contactName__1U0KH\",\"deleteContactBtn\":\"ContactList_deleteContactBtn__25GWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filteredInputLabel\":\"Filter_filteredInputLabel__-SeFZ\",\"filteredInput\":\"Filter_filteredInput__3rBXZ\"};"],"sourceRoot":""}